C51 COMPILER V9.56.0.0   SPI_FLASH                                                         09/26/2018 10:29:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SPI_FLASH
OBJECT MODULE PLACED IN .\SPI_Flash.obj
COMPILER INVOKED BY: C:\Keil_v5c51\C51\BIN\C51.EXE ..\user\SPI_Flash.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\SPI_Flash.lst) OBJECT(.\SPI_Flash.obj)

line level    source

   1          /**
   2          *       ************************************************************************************
   3          *                                                                        模块性能介绍
   4          *       1、全双工，三/四线同步传输
   5          *       2、主从机操作
   6          *       3、4级可编程主时钟频率
   7          *       4、极性相位可编程的串行时钟
   8          *       5、可选择数据传输方向
   9          *       6、写冲突及接收溢出标志
  10          *       7、带MCU中断的主模式模式冲突检测
  11          *       8、带MCU中断的传输结束标志
  12          *       ************************************************************************************
  13          *                                                                        应用注意事项
  14          *       1、SSIG=0&CPHA=0时，数据在SS为低被驱动；CPHA=1时，数据在SCK的前时钟沿驱动
  15          *       2、接收为双BUFF，接收溢出发生在第二个数据传送完成前仍未清除之前接收数据产生的SPIF标
  16          *          志，故每次准备接收下一个数据前必须先清除SPIF，否则RXOV将置1，RXOV置1不会影响SPI接
  17          *          收
  18          *       ************************************************************************************
  19          **/
  20          
  21          #include "HC89F0650.h"
  22          #include "intrins.h"
  23          #include "SPI_Flash.h"
  24          
  25          /***************************************************************************************
  26            * @说明       SPI初始化
  27            *     @参数   无
  28            * @返回值 无
  29            * @注         无
  30          ***************************************************************************************/
  31          void SPI_Flash_Init(void)
  32          {
  33   1              P0M0 = 0xcc;    //25Q64IO输出为5V时需要降低推挽的电流
  34   1              P0M1 = 0x6c;
  35   1      
  36   1              SS_MAP   = 0xc0;        //使能端
  37   1              SCK_MAP  = 0xc1;        //时钟端
  38   1              MOSI_MAP = 0xc2;        //输出口
  39   1              MISO_MAP = 0xc3;        //输入口
  40   1      
  41   1              SPDAT  = 0x00;
  42   1              SPSTAT = 0x00;
  43   1              SPCTL  = 0xd3;
  44   1      }
  45          
  46          /***************************************************************************************
  47            * @说明       写一字节并读出此地址的状态
  48            *     @参数   dat：写入的数据
  49            * @返回值 读到的数据
  50            * @注         无
  51          ***************************************************************************************/
  52          unsigned char SPI_ReadWriteByte(unsigned char dat)
  53          {
  54   1              SPSTAT = 0xc0;
C51 COMPILER V9.56.0.0   SPI_FLASH                                                         09/26/2018 10:29:50 PAGE 2   

  55   1              SPDAT  = dat;
  56   1              while(!(SPSTAT&0x80));
  57   1              SPSTAT = 0xc0;
  58   1      
  59   1              return SPDAT;
  60   1      }
  61          
  62          /***************************************************************************************
  63            * @说明       获取芯片ID
  64            *     @参数   无
  65            * @返回值 无
  66            * @注         无
  67          ***************************************************************************************/
  68          void SPI_Flash_ReadID(unsigned char *id)
  69          {
  70   1              CS = 0;
  71   1              SPI_ReadWriteByte(0x90);//发送读取ID命令            
  72   1              SPI_ReadWriteByte(0x00);
  73   1              SPI_ReadWriteByte(0x00);
  74   1              SPI_ReadWriteByte(0x00);
  75   1              id[0] = SPI_ReadWriteByte(0xFF);
  76   1              id[1] = SPI_ReadWriteByte(0xFF);
  77   1              CS = 1;
  78   1      }
  79          
  80          /***************************************************************************************
  81            * @说明       读SPI_FLASH状态寄存器
  82            *     @参数   无
  83            * @返回值 状态寄存器的值
  84            * @注         无
  85          ***************************************************************************************/
  86          unsigned char SPI_Flash_ReadSR(void)   
  87          {  
  88   1              unsigned char byte = 0;
  89   1      
  90   1              CS = 0;                                                 //使能器件
  91   1              SPI_ReadWriteByte(W25X_ReadStatusReg);      //发送读取状态寄存器命令
  92   1              byte=SPI_ReadWriteByte(0Xff);               //读取一个字节
  93   1              CS = 1;                                                 //取消片选
  94   1      
  95   1              return byte;
  96   1      }
  97          
  98          /***************************************************************************************
  99            * @说明       写SPI_FLASH状态寄存器
 100            *     @参数   sr：写的状态
 101            * @返回值 状态寄存器的值
 102            * @注         只有SPR,TB,BP2,BP1,BP0(bit 7,5,4,3,2)可以写
 103          ***************************************************************************************/
 104          void SPI_FLASH_Write_SR(unsigned char sr)
 105          {
 106   1              CS = 0;                                         //使能器件
 107   1              SPI_ReadWriteByte(W25X_WriteStatusReg); //发送写取状态寄存器命令
 108   1              SPI_ReadWriteByte(sr);                          //写入一个字节
 109   1              CS = 1;                                         //取消片选
 110   1      }
 111          
 112          /***************************************************************************************
 113            * @说明       SPI_FLASH写使能
 114            *     @参数   无
 115            * @返回值 无
 116            * @注         无
C51 COMPILER V9.56.0.0   SPI_FLASH                                                         09/26/2018 10:29:50 PAGE 3   

 117          ***************************************************************************************/
 118          void SPI_FLASH_Write_Enable(void)
 119          {
 120   1              CS = 0;                                                 //使能器件
 121   1          SPI_ReadWriteByte(W25X_WriteEnable);            //发送写使能
 122   1              CS = 1;                                                 //取消片选
 123   1      }
 124          
 125          /***************************************************************************************
 126            * @说明       SPI_FLASH写禁止
 127            *     @参数   无
 128            * @返回值 无
 129            * @注         无
 130          ***************************************************************************************/
 131          void SPI_FLASH_Write_Disable(void)
 132          {
 133   1              CS = 0;                                                 //使能器件
 134   1          SPI_ReadWriteByte(W25X_WriteDisable);           //发送写禁止指令
 135   1              CS = 1;                                                 //取消片选
 136   1      }
 137          
 138          /***************************************************************************************
 139            * @说明       在指定地址开始读取指定长度的数据
 140            *     @参数   pBuffer：数据存储区
 141            *                     ReadAddr:开始读取的地址(24bit)
 142            *                     NumByteToRead:要读取的字节数(最大65535)
 143            * @返回值 无
 144            * @注         无
 145          ***************************************************************************************/
 146          void SPI_Flash_Read(unsigned char* pBuffer,
 147                                                  unsigned long ReadAddr,
 148                                                  unsigned int NumByteToRead)
 149          {
 150   1              unsigned int i;
 151   1      
 152   1              CS=0;                                                   //使能器件
 153   1              SPI_ReadWriteByte(W25X_ReadData);               //发送读取命令
 154   1              SPI_ReadWriteByte((unsigned char)((ReadAddr)>>16));  //发送24bit地址
 155   1              SPI_ReadWriteByte((unsigned char)((ReadAddr)>>8));
 156   1              SPI_ReadWriteByte((unsigned char)ReadAddr);
 157   1      
 158   1              for(i = 0; i < NumByteToRead; i++)
 159   1                      pBuffer[i] = SPI_ReadWriteByte(0XFF);   //循环读数
 160   1      
 161   1              CS=1;                                                                       //取消片选
 162   1      }
 163          
 164          /***************************************************************************************
 165            * @说明       SPI在一页(0~65535)内写入少于256个字节的数
 166            *     @参数   pBuffer：数据存储区
 167            *                     WriteAddr：开始写入的地址(24bit)
 168            *                     NumByteToRead:要读取的字节数(最大65535)，该数不应该超过该页的剩余字节数
 169            * @返回值 无
 170            * @注         无
 171          ***************************************************************************************/
 172          void SPI_Flash_Write_Page(unsigned char* pBuffer,
 173                                                          unsigned long WriteAddr,
 174                                                          unsigned int NumByteToWrite)
 175          {
 176   1                      unsigned int i;
 177   1      
 178   1                      SPI_FLASH_Write_Enable();                       //SET WEL
C51 COMPILER V9.56.0.0   SPI_FLASH                                                         09/26/2018 10:29:50 PAGE 4   

 179   1                      CS=0;                                                           //使能器件
 180   1                      SPI_ReadWriteByte(W25X_PageProgram);                                            //发送写页命令
 181   1                      SPI_ReadWriteByte((unsigned char)((WriteAddr)>>16));            //发送24bit地址
 182   1                      SPI_ReadWriteByte((unsigned char)((WriteAddr)>>8));
 183   1                      SPI_ReadWriteByte((unsigned char)WriteAddr);
 184   1      
 185   1                      for(i = 0; i < NumByteToWrite; i++)
 186   1                              SPI_ReadWriteByte(pBuffer[i]);  //循环写数
 187   1      
 188   1                      CS=1;                                                           //取消片选
 189   1                      SPI_Flash_Wait_Busy();                          //等待写入结束
 190   1      }
 191          
 192          /***************************************************************************************
 193            * @说明       擦除整个芯片
 194            *     @参数   无
 195            * @返回值 无
 196            * @注         等待时间超长
 197          ***************************************************************************************/
 198          void SPI_Flash_Erase_Chip(void)
 199          {
 200   1              SPI_FLASH_Write_Enable();       //SET WEL
 201   1              SPI_Flash_Wait_Busy();
 202   1              CS=0;                           //使能器件
 203   1              SPI_ReadWriteByte(W25X_ChipErase);//发送片擦除命令
 204   1              CS=1;                           //取消片选
 205   1              SPI_Flash_Wait_Busy();          //等待芯片擦除结束
 206   1      }
 207          
 208          /***************************************************************************************
 209            * @说明       等待空闲
 210            *     @参数   无
 211            * @返回值 无
 212            * @注         无
 213          ***************************************************************************************/
 214          void SPI_Flash_Wait_Busy(void)
 215          {
 216   1              while((SPI_Flash_ReadSR()&0x01) == 0x01);   // 等待BUSY位清空
 217   1      }
 218          
 219          /***************************************************************************************
 220            * @说明       进入掉电模式
 221            *     @参数   无
 222            * @返回值 无
 223            * @注         无
 224          ***************************************************************************************/
 225          void SPI_Flash_PowerDown(void)
 226          {
 227   1              CS=0;                             //使能器件
 228   1              SPI_ReadWriteByte(W25X_PowerDown);//发送掉电命令
 229   1              CS=1;                             //取消片选
 230   1      
 231   1              _nop_();
 232   1              _nop_();
 233   1              _nop_();
 234   1      }
 235          
 236          /***************************************************************************************
 237            * @说明       唤醒
 238            *     @参数   无
 239            * @返回值 无
 240            * @注         无
C51 COMPILER V9.56.0.0   SPI_FLASH                                                         09/26/2018 10:29:50 PAGE 5   

 241          ***************************************************************************************/
 242          void SPI_Flash_WAKEUP(void)
 243          {
 244   1              CS=0;                                     //使能器件
 245   1              SPI_ReadWriteByte(W25X_ReleasePowerDown); //send W25X_PowerDown command 0xAB
 246   1              CS=1;                                         //取消片选
 247   1      
 248   1              _nop_();
 249   1              _nop_();
 250   1              _nop_();
 251   1      }
 252          
 253          /***************************************************************************************
 254            * @实现效果   在25Q64写入数据后再次读取出来
 255          ***************************************************************************************/
 256          void SPI_Flash_Test(void)
 257          {
 258   1              unsigned char hello[]="hello holychip\r";
 259   1              unsigned char buf[16];                                                                  //用于存储读取数据
 260   1              unsigned char id[2];                                                                    //用于存储ID号
 261   1      
 262   1              SPI_Flash_Init();                       //SPI控制器初始化
 263   1              SPI_FLASH_Write_Enable();                           //SPI写使能
 264   1              SPI_Flash_ReadID(id);                               //读取ID号
 265   1      
 266   1              SPI_Flash_Write_Page(hello, 1000, 16);  //SPI写入数据
 267   1              SPI_Flash_Read(buf, 1000, 16);                  //SPI读出数据
 268   1      
 269   1              _nop_();
 270   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    534    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----      52
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
